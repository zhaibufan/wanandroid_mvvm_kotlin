if (Integer.valueOf(runModule) == 2) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {

    def version = rootProject.ext.android
    compileSdkVersion version.compileSdkVersion
    defaultConfig {

        if (Integer.valueOf(runModule) == 2) {//当为运行module时才有applicationId属性（可以做到不同module的app能在手机上共存）
            applicationId "com.beyondsoft.mvvm"
        }

        minSdkVersion version.minSdkVersion
        targetSdkVersion version.targetSdkVersion
        versionCode version.versionCode
        versionName version.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main{
            if (Integer.valueOf(runModule) == 2) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    def dependencies = rootProject.ext.dependencies
    def dependenciesX = rootProject.ext.dependenciesX

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    api dependenciesX.appcompat
    api dependenciesX.ktx_core
    api dependenciesX.constraint_layout
    testApi dependencies.junit
    androidTestApi dependenciesX.test_junit
    androidTestApi dependenciesX.espresso

    api dependenciesX.kotlinx_coroutines
    api dependenciesX.lifecycle_viewmodel
    api dependencies.retrofit2
    api dependencies.retrofit2_converter
    api dependencies.okhttp_interceptor
    api dependenciesX.swiperefreshlayout
    api dependenciesX.lifecycle_livedata
}
